@model WebApplication1.Models.ViewModel.GameEventViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create game event</h2>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create"  asp-route-protocolId="@ViewBag.Protocol.Id">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="EventTypeId" class="control-label"></label>
                <select asp-for="EventTypeId" class ="form-control" asp-items="ViewBag.EventTypeId"></select>
            </div>
            <div class="form-group">
                <label asp-for="TimeInMinutes" class="control-label"></label>
                <input asp-for="TimeInMinutes" class="form-control" />
                <span asp-validation-for="TimeInMinutes" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Players" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <select asp-for="Players" asp-items="@(new SelectList(ViewBag.PlayersList, "Id", "FullName"))" multiple="multiple" class="form-control"></select>
                    <span asp-validation-for="Players"></span>
                </div>
            </div>



            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="GameProtocols" asp-route-protocolId="@ViewBag.Protocol.Id">Back to teams</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
